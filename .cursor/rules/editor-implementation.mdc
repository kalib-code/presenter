---
description:
globs:
alwaysApply: false
---
# Editor Implementation Patterns

## Editor Architecture

### Core Editor Features
The editor implementation follows the specifications defined in [editor_scope.md](mdc:editor_scope.md):

#### Canvas Editor
- Drag-and-drop interface for text and media elements
- Real-time preview of slides
- Grid snapping and alignment guides
- Zoom in/out capabilities
- Rulers and guidelines
- Multiple selection and group editing

#### Toolbars
- Format toolbar (text styling, alignment, etc.)
- Object toolbar (arrangement, grouping, etc.)
- Media toolbar (import, library access)
- View controls (zoom, grid, guides)

### Data Structure

#### Editor State
```typescript
interface EditorState {
  slides: Slide[];
  currentSlide: number;
  clipboard: EditorElement[];
  history: HistoryState[];
  settings: EditorSettings;
}
```

#### Slide Structure
```typescript
interface Slide {
  id: string;
  elements: EditorElement[];
  background: Background;
  transition: Transition;
  notes: string;
}
```

#### Element Types
```typescript
interface EditorElement {
  id: string;
  type: "text" | "image" | "video" | "audio" | "shape";
  position: Position;
  size: Size;
  style: ElementStyle;
  content: any;
}
```

### State Management

#### Zustand Store Pattern
Follow the pattern established in [src/renderer/src/store/song.ts](mdc:src/renderer/src/store/song.ts) for editor state:

```typescript
interface EditorStore {
  slides: Slide[];
  currentSlide: number;
  selectedElements: string[];
  clipboard: EditorElement[];
  history: HistoryState[];
  settings: EditorSettings;
  
  // Actions
  addSlide: () => void;
  removeSlide: (id: string) => void;
  updateSlide: (id: string, updates: Partial<Slide>) => void;
  selectElement: (id: string) => void;
  addElement: (element: EditorElement) => void;
  updateElement: (id: string, updates: Partial<EditorElement>) => void;
  removeElement: (id: string) => void;
  undo: () => void;
  redo: () => void;
}
```

### Text Editing Features

#### Rich Text Formatting
- Font family and size
- Bold, italic, underline
- Text color and highlight
- Alignment (left, center, right, justify)
- Line height and spacing
- Bullet points and numbering

#### Text Box Management
- Multiple text boxes per slide
- Text overflow handling
- Auto-sizing options
- Text box templates

### Media Handling

#### Image Support
- Import multiple formats (PNG, JPEG, GIF, SVG)
- Basic image editing (resize, crop, rotate, opacity)
- Image filters and effects
- Background removal options

#### Video Support
- Multiple format support (MP4, WebM)
- Trim video clips
- Set in/out points
- Preview in editor
- Loop options
- Auto-play settings

#### Audio Support
- Background music
- Sound effects
- Volume control
- Fade in/out options
- Timing synchronization

### Slide Management

#### Organization
- Thumbnail view of all slides
- Drag-and-drop slide reordering
- Duplicate slides
- Group slides into sections
- Slide transitions
- Timeline view

#### Templates
- Built-in slide templates
- Custom template creation
- Template categories (song, scripture, announcement, custom)

### Performance Optimization

#### Strategies
- Virtual scrolling for slide thumbnails
- Lazy loading for media assets
- Debounced updates for real-time preview
- Web Workers for heavy computations
- Canvas-based rendering for complex slides

#### Memory Management
- Automatic cleanup of unused media
- Resource pooling for frequently used assets
- Efficient history stack management

### Integration Points

#### File System Integration
- Auto-save to local storage using LMDB
- Export/Import presentations
- Media asset management
- Template storage

#### IPC Communication
- Preview window updates
- Stage display communication
- Media library synchronization
- Settings management

### Accessibility Features

#### Keyboard Navigation
- Full keyboard control
- Customizable shortcuts
- Focus management
- Tab order optimization

#### Screen Reader Support
- ARIA labels
- Role annotations
- Status announcements
- Alternative text management

#### Visual Accessibility
- High contrast mode
- Adjustable UI scaling
- Color blind friendly indicators
- Customizable focus indicators

### Development Phases

#### Phase 1: Core Editor
- [ ] Basic canvas implementation
- [ ] Text editing capabilities
- [ ] Simple media import
- [ ] Slide management

#### Phase 2: Enhanced Features
- [ ] Advanced text formatting
- [ ] Media editing tools
- [ ] Templates system
- [ ] Transitions

#### Phase 3: Performance & Polish
- [ ] Optimization
- [ ] Accessibility implementation
- [ ] Advanced features
- [ ] Testing and refinement

### Testing Strategy

#### Unit Tests
- Editor operations
- State management
- Command handling
- Media processing

#### Integration Tests
- IPC communication
- File system operations
- Preview synchronization
- Multi-window interaction

#### Performance Tests
- Large presentation handling
- Media processing efficiency
- Memory usage monitoring
- Real-time preview performance

#### Accessibility Tests
- Screen reader compatibility
- Keyboard navigation
- Color contrast compliance
- Focus management
